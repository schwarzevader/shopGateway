spring.application.name=shop-gateway
spring.cloud.config.uri=http://localhost:8888

#spring.main.web-application-type=reactive

#spring.cloud.loadbalancer.ribbon.enable=false

#spring.cloud.gateway.routes.[0].id=new
##spring.cloud.gateway.routes.[1].uri=http://localhost:8180/
#spring.cloud.gateway.routes[0].uri=lb://shop
#spring.cloud.gateway.routes.[0].predicates[0]=Path=/products/**
#spring.cloud.gateway.routes[0].predicates[1]=Method=POST
#spring.cloud.gateway.routes[0].predicates[2]=Method=GET

#spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8080/realms/master/protocol/openid-connect/token/introspect

#spring.security.oauth2.client.registration.oauth2-client-credentials.client-id=
#spring.security.oauth2.client.registration.oauth2-client-credentials.client-secret=
#spring.security.oauth2.client.registration.oauth2-client-credentials.scope=openid, profile, roles
#spring.security.oauth2.client.registration.oauth2-client-credentials.authorization-grant-type=client_credentials
#spring.security.oauth2.client.registration.oauth2-client-credentials.redirect-uri=
#spring.security.oauth2.client.registration.oauth2-client-credentials.provider=keycloak
#
#spring.security.oauth2.client.provider.keycloak.issuer-uri=
#
#spring.security.oauth2.resourceserver.jwt.issuer-uri=

#server.port=8072
#
#eureka.instance.preferIpAddress = true
#eureka.client.registerWithEureka = true
#eureka.client.fetchRegistry = true
#eureka.client.serviceUrl.defaultZone = http://localhost:8070/eureka
#
#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true

#keycloak.realm = shopGateway
#keycloak.auth-server-url =http://localhost:8080/realms/spring-microservices-realm
#keycloak.ssl-required = external
#keycloak.resource = shopGateway
#keycloak.credentials.secret = NAptgnXlZSbs0wSXXvZDddcoX5ed96dY
#keycloak.use-resource-role-mappings = true
#keycloak.bearer-only = true

#
##Keycloak
#
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/spring-microservices-realm
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/spring-microservices-realm/protocol/openid-connect/certs
#
#
#spring.security.oauth2.resourceserver.jwt.public-key-location=http://localhost:8080/realms/spring-microservices-realm
#spring.security.oauth2.client.registration.keycloak.clientName=shopGateway
##spring.security.oauth2.client.registration.keycloak.client-id=shop-gateway
#spring.security.oauth2.client.registration.keycloak.redirectUri=http://localhost:8073/*
#spring.security.oauth2.client.registration.keycloak.client-id=shopGateway
#spring.security.oauth2.client.registration.keycloak.client-secret=NAptgnXlZSbs0wSXXvZDddcoX5ed96dY
#spring.security.oauth2.client.registration.keycloak.client-secret=nxEEYS7EvN8WEHIK8ljqP83JYdCJFEBy
#spring.security.oauth2.client.registration.keycloak.scope=profile,email,openid
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/master

#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/master
#spring.security.oauth2.client.registration.keycloak.scope[]=profile,email,openid
#spring.security.oauth2.client.registration.keycloak.client-id=shopGateway
#spring.security.oauth2.client.registration.keycloak.client-secret=nxEEYS7EvN8WEHIK8ljqP83JYdCJFEBy
#
#spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/realms/master/protocol/openid-connect/auth
#spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/master/protocol/openid-connect/token
#spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/realms/master/protocol/openid-connect/userinfo
#spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/realms/master/protocol/openid-connect/certs
#spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/auth/realms/spring-microservice/protocol/openid-connect/certs

#spring.security.oauth2.client.registration.keycloak.clientName=shop-GatewayName
#spring.security.oauth2.client.registration.keycloak.redirectUri=*
#spring.security.oauth2.client.registration.keycloak.redirectUri=http://localhost:8080/login/oauth2

#
##spring.security.oauth2.client.registration.keycloak.redirectUri=http://localhost:8080/personprocess/
##spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/realms/master/protocol/openid-connect/auth
##spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/master/protocol/openid-connect/token
##spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/realms/master/protocol/openid-connect/userinfo
##spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/realms/master/protocol/openid-connect/certs
#spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#
##spring.security.oauth2.client.provider.keycloak.user-name-attribute=
##spring.security.oauth2.client.registration.keycloak.clientName=shop-GatewayName
#
##spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/auth/realms/master-realm/protocol/openid-connect/auth
##spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/auth/realms/master-realm/protocol/openid-connect/token
##spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/auth/realms/master-realm/protocol/openid-connect/userinfo
##spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/auth/realms/master-realm/protocol/openid-connect/certs
#
##Gateway
#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
##spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/spring-microservices-realm





#nxEEYS7EvN8WEHIK8ljqP83JYdCJFEBy
#http://localhost:9090/login/oauth2/code/keycloak

#shop-gateway key xLnbk3nKInhUCAci9wtGpk2pD9KwIAaj

#spring.cloud.gateway.routes[0].id=person
#spring.cloud.gateway.routes[0].uri=http://localhost:8/
#spring.cloud.gateway.routes[0].predicates[0].name=Path
#spring.cloud.gateway.routes[0].predicates[0].args[pattern]=/personprocess/**
#spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
#spring.cloud.gateway.routes[0].filters[0].args[name]=myCircuitBreaker
#spring.cloud.gateway.routes[0].filters[0].args[fallbackUri]=forward:/myCircuitBreaker/inCaseOfFailureUseThis
#spring.cloud.gateway.routes[1].id=keycloak
#spring.cloud.gateway.routes[1].uri=http://localhost:8/
#spring.cloud.gateway.routes[1].predicates[0].name=Path
#spring.cloud.gateway.routes[1].predicates[0].args[pattern]=/auth/**
#spring.cloud.gateway.routes[1].filters[0].name=TokenRelay
#spring.cloud.gateway.routes[1].filters[1].name=RemoveRequestHeader
#spring.cloud.gateway.routes[1].filters[1].args[name]=Cookie



